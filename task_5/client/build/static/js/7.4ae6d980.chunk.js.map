{"version":3,"sources":["pages/login/Login.js","components/secureInput/SecureInput.js"],"names":["Login","history","useHistory","useState","email","setEmail","password","setPassword","isLoading","setIsLoading","emailErr","setEmailErr","passwordErr","setPasswordErr","useEffect","token","JSON","parse","localStorage","getItem","axios","post","then","res","data","userId","push","HOME","catch","err","className","onSubmit","e","preventDefault","validator","isEmail","userCreds","auth","setItem","stringify","alert","target","reset","handleLogin","label","error","helperText","onChange","value","input","setInput","type","to","SIGNUP","SecureInput","visibility","setVisibility","onClick"],"mappings":"4PAkFeA,UAlED,WACV,IAAMC,EAAUC,cAEhB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAsCR,oBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACN,IACI,IAAQC,EAAUC,KAAKC,MAAMC,aAAaC,QAAQ,gBAA1CJ,MAERK,IAAMC,KAhBU,wCAgBgB,CAAEN,UAASO,MAAK,SAAAC,GACxCA,EAAIC,KAAKC,QACTxB,EAAQyB,KAAKC,QAClBC,OAAM,eACX,MAAOC,OACV,CAAC5B,IA6BJ,OACI,sBAAK6B,UAAU,QAAf,UACKtB,EAAY,cAAC,IAAD,IAAc,KAC3B,uBAAMsB,UAAU,aAAaC,SAAU,SAACC,GAAD,OA9B3B,SAACA,GAMjB,GALAA,EAAEC,iBAEFtB,GAAauB,IAAUC,QAAQ/B,IAC/BS,GAAgBP,GAEZ4B,IAAUC,QAAQ/B,IAAUE,EAAU,CACtCG,GAAa,GACb,IAAM2B,EAAY,CAAEhC,QAAOE,YAE3Bc,IAAMC,KAlCI,uCAkCgBe,GAAWd,MAAK,SAAAC,GAClCA,EAAIC,KAAKa,MACTnB,aAAaoB,QAAQ,cAAetB,KAAKuB,UAAU,CAAExB,MAAOQ,EAAIC,KAAKT,SACrEd,EAAQyB,KAAKC,OAGba,MAAM,0BACN/B,GAAa,OAElBmB,OAAM,WAAQnB,GAAa,MAG9BF,EAAY,IACZyB,EAAES,OAAOC,SAOqCC,CAAYX,IAA1D,UACI,mBAAGF,UAAU,eAAb,mBACA,cAAC,IAAD,CACIc,MAAM,QACNC,MAAOnC,EACPoC,WAAYpC,EAAW,4BAA8B,KACrDqC,SAAU,SAACf,GAAD,OAAO3B,EAAS2B,EAAES,OAAOO,UACvC,cAAC,IAAD,CAAaJ,MAAM,WAAWC,MAAOjC,EAAakC,WAAW,yBAAyBG,MAAO3C,EAAU4C,SAAU3C,IACjH,cAAC,IAAD,CAAQ4C,KAAK,SAAb,mBACA,cAAC,IAAD,CAAMrB,UAAU,oBAAoBsB,GAAIC,IAAxC,iC,6GCnDDC,IAlBK,SAAC,GAAmD,IAAjDV,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,WAAYG,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACpD,EAAoC/C,oBAAS,GAA7C,mBAAOoD,EAAP,KAAmBC,EAAnB,KAEA,OACI,sBAAK1B,UAAU,cAAf,UACI,cAAC,IAAD,CACIkB,MAAOC,EACPL,MAAOA,EACPO,KAAMI,EAAa,OAAS,WAC5BV,MAAOA,EACPC,WAAYD,EAAQC,EAAa,GACjCC,SAAU,SAACf,GAAD,OAAOkB,EAASlB,EAAES,OAAOO,UAEtCO,EAAa,cAAC,IAAD,CAAuBE,QAAS,kBAAMD,GAAeD,MAAkB,cAAC,IAAD,CAA0BE,QAAS,kBAAMD,GAAeD,W","file":"static/js/7.4ae6d980.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport validator from \"validator\";\r\nimport \"./Login.css\";\r\n// costants\r\nimport { HOME, SIGNUP } from \"../../constants/routes\";\r\n// components\r\nimport Loading from \"../../components/loading/Loading\";\r\nimport SecureInput from \"../../components/secureInput/SecureInput\";\r\n// material-ui\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst AUTH_ENDPOINT = \"https://task5-sac.herokuapp.com/auth\";\r\nconst TOKEN_AUTH_ENDPOINT = \"https://task5-sac.herokuapp.com/token\";\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    // states\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // errors\r\n    const [emailErr, setEmailErr] = useState(false);\r\n    const [passwordErr, setPasswordErr] = useState(false);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const { token } = JSON.parse(localStorage.getItem(\"task5_token\"));\r\n\r\n            axios.post(TOKEN_AUTH_ENDPOINT, { token }).then(res => {\r\n                if (res.data.userId)\r\n                    history.push(HOME);\r\n            }).catch(() => { });\r\n        } catch (err) { }\r\n    }, [history]);\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        setEmailErr(!validator.isEmail(email));\r\n        setPasswordErr(!password);\r\n\r\n        if (validator.isEmail(email) && password) {\r\n            setIsLoading(true);\r\n            const userCreds = { email, password };\r\n\r\n            axios.post(AUTH_ENDPOINT, userCreds).then(res => {\r\n                if (res.data.auth) {\r\n                    localStorage.setItem(\"task5_token\", JSON.stringify({ token: res.data.token }));\r\n                    history.push(HOME);\r\n                }\r\n                else {\r\n                    alert(\"User access : DENIED !\");\r\n                    setIsLoading(false);\r\n                }\r\n            }).catch(() => { setIsLoading(false); });\r\n\r\n            // reset\r\n            setPassword(\"\");\r\n            e.target.reset();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            {isLoading ? <Loading /> : null}\r\n            <form className=\"login__box\" onSubmit={(e) => handleLogin(e)}>\r\n                <p className=\"login__title\">Login</p>\r\n                <TextField\r\n                    label=\"Email\"\r\n                    error={emailErr}\r\n                    helperText={emailErr ? \"What's your valid email ?\" : null}\r\n                    onChange={(e) => setEmail(e.target.value)} />\r\n                <SecureInput label=\"Password\" error={passwordErr} helperText=\"What's your password ?\" input={password} setInput={setPassword} />\r\n                <Button type=\"submit\">Login</Button>\r\n                <Link className=\"login__signupLink\" to={SIGNUP}>New Account</Link>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport \"./SecureInput.css\";\r\n// material-ui\r\nimport { TextField } from \"@material-ui/core\";\r\nimport VisibilityRoundedIcon from '@material-ui/icons/VisibilityRounded';\r\nimport VisibilityOffRoundedIcon from '@material-ui/icons/VisibilityOffRounded';\r\n\r\nconst SecureInput = ({ label, error, helperText, input, setInput }) => {\r\n    const [visibility, setVisibility] = useState(false);\r\n\r\n    return (\r\n        <div className=\"secureInput\" >\r\n            <TextField\r\n                value={input}\r\n                label={label}\r\n                type={visibility ? \"text\" : \"password\"}\r\n                error={error}\r\n                helperText={error ? helperText : \"\"}\r\n                onChange={(e) => setInput(e.target.value)}\r\n            />\r\n            {visibility ? <VisibilityRoundedIcon onClick={() => setVisibility(!visibility)} /> : <VisibilityOffRoundedIcon onClick={() => setVisibility(!visibility)} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SecureInput;\r\n"],"sourceRoot":""}